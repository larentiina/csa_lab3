in_source: |
  {
      string c = "a";
      input_char(c);
      while(c>0){
          print_char(c);
          input_char(c);
      }
  }
in_stdin: |-
  lera
out_log: |
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.IN: 'IN'>}
  DEBUG    root:machine.py:84 input: 108
  DEBUG    root:machine.py:126 {TICK: 1, PC: 1, ADDR: 0, ACC: 108, DR: 0, DA 0}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.ST: 'ST'>, 'arg': 1, 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 2, PC: 1, ADDR: 0, ACC: 108, DR: 1, DA 0}
  DEBUG    root:machine.py:126 {TICK: 3, PC: 2, ADDR: 1, ACC: 108, DR: 1, DA 1}
  DEBUG    root:machine.py:126 {TICK: 4, PC: 2, ADDR: 1, ACC: 108, DR: 1, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.LD: 'LD'>, 'arg': 1, 'addr_mode': <AddressMode.DIRECT: 'DIRECT'>}
  DEBUG    root:machine.py:126 {TICK: 5, PC: 2, ADDR: 1, ACC: 108, DR: 1, DA 1}
  DEBUG    root:machine.py:126 {TICK: 6, PC: 2, ADDR: 1, ACC: 108, DR: 108, DA 1}
  DEBUG    root:machine.py:126 {TICK: 7, PC: 3, ADDR: 1, ACC: 108, DR: 108, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.CMP: 'CMP'>, 'arg': '0', 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 8, PC: 3, ADDR: 1, ACC: 108, DR: 0, DA 1}
  DEBUG    root:machine.py:126 {TICK: 9, PC: 4, ADDR: 1, ACC: 108, DR: 0, DA 1}
  DEBUG    root:machine.py:126 {TICK: 10, PC: 4, ADDR: 1, ACC: 108, DR: 0, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.JLE: 'JLE'>, 'arg': 10, 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 11, PC: 5, ADDR: 1, ACC: 108, DR: 0, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.LD: 'LD'>, 'arg': 1, 'addr_mode': <AddressMode.DIRECT: 'DIRECT'>}
  DEBUG    root:machine.py:126 {TICK: 12, PC: 5, ADDR: 1, ACC: 108, DR: 0, DA 1}
  DEBUG    root:machine.py:126 {TICK: 13, PC: 5, ADDR: 1, ACC: 108, DR: 108, DA 1}
  DEBUG    root:machine.py:126 {TICK: 14, PC: 6, ADDR: 1, ACC: 108, DR: 108, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.OUT: 'OUT'>}
  DEBUG    root:machine.py:113 output: '' << 'l'
  DEBUG    root:machine.py:126 {TICK: 15, PC: 7, ADDR: 1, ACC: 108, DR: 108, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.IN: 'IN'>}
  DEBUG    root:machine.py:84 input: 101
  DEBUG    root:machine.py:126 {TICK: 16, PC: 8, ADDR: 1, ACC: 101, DR: 108, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.ST: 'ST'>, 'arg': 1, 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 17, PC: 8, ADDR: 1, ACC: 101, DR: 1, DA 1}
  DEBUG    root:machine.py:126 {TICK: 18, PC: 9, ADDR: 1, ACC: 101, DR: 1, DA 1}
  DEBUG    root:machine.py:126 {TICK: 19, PC: 9, ADDR: 1, ACC: 101, DR: 1, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.JMP: 'JMP'>, 'arg': 2, 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 20, PC: 2, ADDR: 1, ACC: 101, DR: 1, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.LD: 'LD'>, 'arg': 1, 'addr_mode': <AddressMode.DIRECT: 'DIRECT'>}
  DEBUG    root:machine.py:126 {TICK: 21, PC: 2, ADDR: 1, ACC: 101, DR: 1, DA 1}
  DEBUG    root:machine.py:126 {TICK: 22, PC: 2, ADDR: 1, ACC: 101, DR: 101, DA 1}
  DEBUG    root:machine.py:126 {TICK: 23, PC: 3, ADDR: 1, ACC: 101, DR: 101, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.CMP: 'CMP'>, 'arg': '0', 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 24, PC: 3, ADDR: 1, ACC: 101, DR: 0, DA 1}
  DEBUG    root:machine.py:126 {TICK: 25, PC: 4, ADDR: 1, ACC: 101, DR: 0, DA 1}
  DEBUG    root:machine.py:126 {TICK: 26, PC: 4, ADDR: 1, ACC: 101, DR: 0, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.JLE: 'JLE'>, 'arg': 10, 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 27, PC: 5, ADDR: 1, ACC: 101, DR: 0, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.LD: 'LD'>, 'arg': 1, 'addr_mode': <AddressMode.DIRECT: 'DIRECT'>}
  DEBUG    root:machine.py:126 {TICK: 28, PC: 5, ADDR: 1, ACC: 101, DR: 0, DA 1}
  DEBUG    root:machine.py:126 {TICK: 29, PC: 5, ADDR: 1, ACC: 101, DR: 101, DA 1}
  DEBUG    root:machine.py:126 {TICK: 30, PC: 6, ADDR: 1, ACC: 101, DR: 101, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.OUT: 'OUT'>}
  DEBUG    root:machine.py:113 output: 'l' << 'e'
  DEBUG    root:machine.py:126 {TICK: 31, PC: 7, ADDR: 1, ACC: 101, DR: 101, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.IN: 'IN'>}
  DEBUG    root:machine.py:84 input: 114
  DEBUG    root:machine.py:126 {TICK: 32, PC: 8, ADDR: 1, ACC: 114, DR: 101, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.ST: 'ST'>, 'arg': 1, 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 33, PC: 8, ADDR: 1, ACC: 114, DR: 1, DA 1}
  DEBUG    root:machine.py:126 {TICK: 34, PC: 9, ADDR: 1, ACC: 114, DR: 1, DA 1}
  DEBUG    root:machine.py:126 {TICK: 35, PC: 9, ADDR: 1, ACC: 114, DR: 1, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.JMP: 'JMP'>, 'arg': 2, 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 36, PC: 2, ADDR: 1, ACC: 114, DR: 1, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.LD: 'LD'>, 'arg': 1, 'addr_mode': <AddressMode.DIRECT: 'DIRECT'>}
  DEBUG    root:machine.py:126 {TICK: 37, PC: 2, ADDR: 1, ACC: 114, DR: 1, DA 1}
  DEBUG    root:machine.py:126 {TICK: 38, PC: 2, ADDR: 1, ACC: 114, DR: 114, DA 1}
  DEBUG    root:machine.py:126 {TICK: 39, PC: 3, ADDR: 1, ACC: 114, DR: 114, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.CMP: 'CMP'>, 'arg': '0', 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 40, PC: 3, ADDR: 1, ACC: 114, DR: 0, DA 1}
  DEBUG    root:machine.py:126 {TICK: 41, PC: 4, ADDR: 1, ACC: 114, DR: 0, DA 1}
  DEBUG    root:machine.py:126 {TICK: 42, PC: 4, ADDR: 1, ACC: 114, DR: 0, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.JLE: 'JLE'>, 'arg': 10, 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 43, PC: 5, ADDR: 1, ACC: 114, DR: 0, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.LD: 'LD'>, 'arg': 1, 'addr_mode': <AddressMode.DIRECT: 'DIRECT'>}
  DEBUG    root:machine.py:126 {TICK: 44, PC: 5, ADDR: 1, ACC: 114, DR: 0, DA 1}
  DEBUG    root:machine.py:126 {TICK: 45, PC: 5, ADDR: 1, ACC: 114, DR: 114, DA 1}
  DEBUG    root:machine.py:126 {TICK: 46, PC: 6, ADDR: 1, ACC: 114, DR: 114, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.OUT: 'OUT'>}
  DEBUG    root:machine.py:113 output: 'le' << 'r'
  DEBUG    root:machine.py:126 {TICK: 47, PC: 7, ADDR: 1, ACC: 114, DR: 114, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.IN: 'IN'>}
  DEBUG    root:machine.py:84 input: 97
  DEBUG    root:machine.py:126 {TICK: 48, PC: 8, ADDR: 1, ACC: 97, DR: 114, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.ST: 'ST'>, 'arg': 1, 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 49, PC: 8, ADDR: 1, ACC: 97, DR: 1, DA 1}
  DEBUG    root:machine.py:126 {TICK: 50, PC: 9, ADDR: 1, ACC: 97, DR: 1, DA 1}
  DEBUG    root:machine.py:126 {TICK: 51, PC: 9, ADDR: 1, ACC: 97, DR: 1, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.JMP: 'JMP'>, 'arg': 2, 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 52, PC: 2, ADDR: 1, ACC: 97, DR: 1, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.LD: 'LD'>, 'arg': 1, 'addr_mode': <AddressMode.DIRECT: 'DIRECT'>}
  DEBUG    root:machine.py:126 {TICK: 53, PC: 2, ADDR: 1, ACC: 97, DR: 1, DA 1}
  DEBUG    root:machine.py:126 {TICK: 54, PC: 2, ADDR: 1, ACC: 97, DR: 97, DA 1}
  DEBUG    root:machine.py:126 {TICK: 55, PC: 3, ADDR: 1, ACC: 97, DR: 97, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.CMP: 'CMP'>, 'arg': '0', 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 56, PC: 3, ADDR: 1, ACC: 97, DR: 0, DA 1}
  DEBUG    root:machine.py:126 {TICK: 57, PC: 4, ADDR: 1, ACC: 97, DR: 0, DA 1}
  DEBUG    root:machine.py:126 {TICK: 58, PC: 4, ADDR: 1, ACC: 97, DR: 0, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.JLE: 'JLE'>, 'arg': 10, 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 59, PC: 5, ADDR: 1, ACC: 97, DR: 0, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.LD: 'LD'>, 'arg': 1, 'addr_mode': <AddressMode.DIRECT: 'DIRECT'>}
  DEBUG    root:machine.py:126 {TICK: 60, PC: 5, ADDR: 1, ACC: 97, DR: 0, DA 1}
  DEBUG    root:machine.py:126 {TICK: 61, PC: 5, ADDR: 1, ACC: 97, DR: 97, DA 1}
  DEBUG    root:machine.py:126 {TICK: 62, PC: 6, ADDR: 1, ACC: 97, DR: 97, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.OUT: 'OUT'>}
  DEBUG    root:machine.py:113 output: 'ler' << 'a'
  DEBUG    root:machine.py:126 {TICK: 63, PC: 7, ADDR: 1, ACC: 97, DR: 97, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.IN: 'IN'>}
  DEBUG    root:machine.py:84 input: 0
  DEBUG    root:machine.py:126 {TICK: 64, PC: 8, ADDR: 1, ACC: 0, DR: 97, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.ST: 'ST'>, 'arg': 1, 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 65, PC: 8, ADDR: 1, ACC: 0, DR: 1, DA 1}
  DEBUG    root:machine.py:126 {TICK: 66, PC: 9, ADDR: 1, ACC: 0, DR: 1, DA 1}
  DEBUG    root:machine.py:126 {TICK: 67, PC: 9, ADDR: 1, ACC: 0, DR: 1, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.JMP: 'JMP'>, 'arg': 2, 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 68, PC: 2, ADDR: 1, ACC: 0, DR: 1, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.LD: 'LD'>, 'arg': 1, 'addr_mode': <AddressMode.DIRECT: 'DIRECT'>}
  DEBUG    root:machine.py:126 {TICK: 69, PC: 2, ADDR: 1, ACC: 0, DR: 1, DA 1}
  DEBUG    root:machine.py:126 {TICK: 70, PC: 2, ADDR: 1, ACC: 0, DR: 0, DA 1}
  DEBUG    root:machine.py:126 {TICK: 71, PC: 3, ADDR: 1, ACC: 0, DR: 0, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.CMP: 'CMP'>, 'arg': '0', 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 72, PC: 3, ADDR: 1, ACC: 0, DR: 0, DA 1}
  DEBUG    root:machine.py:126 {TICK: 73, PC: 4, ADDR: 1, ACC: 0, DR: 0, DA 1}
  DEBUG    root:machine.py:126 {TICK: 74, PC: 4, ADDR: 1, ACC: 0, DR: 0, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.JLE: 'JLE'>, 'arg': 10, 'addr_mode': <AddressMode.IMMEDIATE: 'IMMEDIATE'>}
  DEBUG    root:machine.py:126 {TICK: 75, PC: 10, ADDR: 1, ACC: 0, DR: 0, DA 1}
  INFO     root:machine.py:165 instruction: {'opcode': <Opcode.HLT: 'HLT'>}
out_stdout: |
  0
  ============================================================
  lera
  instr_counter:  37 ticks: 75
out_code: |
  [
      {
          "opcode": "IN"
      },
      {
          "opcode": "ST",
          "arg": 1,
          "addr_mode": "IMMEDIATE"
      },
      {
          "opcode": "LD",
          "arg": 1,
          "addr_mode": "DIRECT"
      },
      {
          "opcode": "CMP",
          "arg": "0",
          "addr_mode": "IMMEDIATE"
      },
      {
          "opcode": "JLE",
          "arg": 10,
          "addr_mode": "IMMEDIATE"
      },
      {
          "opcode": "LD",
          "arg": 1,
          "addr_mode": "DIRECT"
      },
      {
          "opcode": "OUT"
      },
      {
          "opcode": "IN"
      },
      {
          "opcode": "ST",
          "arg": 1,
          "addr_mode": "IMMEDIATE"
      },
      {
          "opcode": "JMP",
          "arg": 2,
          "addr_mode": "IMMEDIATE"
      },
      {
          "opcode": "HLT"
      }
  ]
out_ast: |
  PROG: None
    SEQ: None
      SEQ: None
        SEQ: None
          EMPTY: None
          OPERATOR: =
            VAR_STRING: c
            STRING_CONST: a
        FUNC: input_char
          VAR: c
      KEY_WORDS: while
        OPERATOR: >
          VAR: c
          INT_CONST: 0
        SEQ: None
          SEQ: None
            EMPTY: None
            FUNC: print_char
              VAR: c
          FUNC: input_char
            VAR: c
